package some.domain.utils;

import java.util.List;
import java.util.Random;

import org.openqa.selenium.WebElement;

import some.domain.utils.TraceOps.LogLevel;

public class Helper {
	
	public static int calculateNonEmptyArgs(String... args){

		int count=0;
		
		for (String s:args){
			if (s!="")
				count++;
		}
		return count;
	}

	public static int getRandomIndex(List list){
		
		int elemCount = list.size();	
		Random random = new Random();
		int randomElem = random.nextInt(elemCount) + 1;
		TraceOps.printMessage(LogLevel.TRACE, "index %d has been randomly selected.", randomElem);
		
		return randomElem;
	}

	public static boolean isMatchingElement(List<WebElement> elems, String[] criterias){
		
		boolean isMatch = false;
		
		//getting all text data from List of web elements
		String result ="";
		for(WebElement e:elems){
			
			String str = e.getText();
			result = result+str;
		}
		//Asserting data from List of web elements with pattern defined in criterias.
		for (int i =0; i<criterias.length;i++){
			if (result.contains(criterias[i])){
				TraceOps.printMessage(LogLevel.TRACE, "  Matching element was found: %s", criterias[i]);
				isMatch=true;
				break;
			}
		}

		return isMatch;
	}

}
